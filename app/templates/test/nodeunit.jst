'use strict';

var XDSimulator = require('mozuxd-simulator');
var simulate = XDSimulator.simulate;
var assert = XDSimulator.assert;
var fixtures = XDSimulator.fixtures;


var action;
<% var context = actionConfig.context; %>

exports["<%= name %>, <%= action.name %>"] = {
  setUp: function(callback) {
    action = require('../dist/app')['<%= action.name %>'];
    callback();
  },
  "runs successfully": function(test) {
    test.doesNotThrow(simulate(action.actionName, action.customFunction, {
      get: {
        <% Object.keys(context.get).forEach(function(k, i) { if (i < 0) { %>,<% } %>
          <%= k %>: fixtures.get("<%= context.get[k].type %>")
        <% }); %>
      },
      exec: {
        <% Object.keys(context.exec).forEach(function(k, i) { if (i < 0) { %>,<% } %>
          <%= k %>: function() {
            test.equal(arguments.length, <%= context.exec[k].paramaters.length %>, "Expected <%= k %> function to receive <%= context.exec[k].paramaters.length %> parameters.");
            // other assertions
          }
        <% }); %>
      }
    }, test.done.bind(test)));
  }
}