'use strict';

var XDSimulator = require('mozuxd-simulator');
var simulate = XDSimulator.simulate;
var assert = XDSimulator.assert;
var fixtures = XDSimulator.fixtures;

describe('<%= name %>, <%= action.name %>', function () {

  var action;

  before(function () {
    action = require('../src/domains/<%= action.domain %>/<%= action.name %>');
  });
  <% var context = actionConfig.context; %>

  it('runs successfully', function(done) {

     var context = {
      get: function() {
          return {
            <% if (typeof context.get === "object") {
               Object.keys(context.get).forEach(function(k, i) { if (i > 0) { %>,<% } %>
              <%= k %>: fixtures.get("<%= context.get[k].type %>")
            <% }); } %>
          }
      },
      exec: function() {
          return {
            <% if (typeof context.exec === "object") {
               Object.keys(context.exec).forEach(function(k, i) { if (i > 0) { %>,<% } %>
              <%= k %>: function() {
                assert.equal(arguments.length, <%= context.exec[k].parameters.length %>, "Expected <%= k %> function to receive <%= context.exec[k].parameters.length %> parameters.");
                // other assertions
              }
            <% }); } %>
          }
      }
    };

    var callback = function() {
      assert.ok(true, "Callback was called");
      // more assertions
      done();
    };

    assert.doesNotThrow(simulate('<%= action.name %>', action, context, callback));
  });
});
